define(["moment"],function(moment){Handlebars.registerHelper("default",function(text){if(text==undefined)return"";return text});Handlebars.registerHelper("when",function(lvalue,operator,rvalue,options){if("equals"===operator){if(lvalue==rvalue)return options.fn(this);return options.inverse(this)}else if("equalsAsString"===operator){if(lvalue===rvalue)return options.fn(this);return options.inverse(this)}else if("notEqualsAsString"===operator){if(lvalue!==rvalue)return options.fn(this);return options.inverse(this)}else if("lessThan"===
operator){if(lvalue<rvalue)return options.fn(this);return options.inverse(this)}else if("lessThanOrEquals"===operator){if(lvalue<=rvalue)return options.fn(this);return options.inverse(this)}else if("greaterThan"===operator){if(lvalue>rvalue)return options.fn(this);return options.inverse(this)}else if("greaterThanOrEquals"===operator){if(lvalue>=rvalue)return options.fn(this);return options.inverse(this)}else if("and"&&operator){if(lvalue==rvalue)return options.fn(this);return options.inverse(this)}else if("or"===
operator){if(lvalue||rvalue)return options.fn(this);return options.inverse(this)}return obj.length});Handlebars.registerHelper("dateFormat",function(context,block){if(moment){var f=block.hash.format||"yy-mm-dd";return moment(new Date(context)).format(f)}else return context});Handlebars.registerHelper("formatDate",function(context,block){if(moment){var f=block||"yy-mm-dd";return moment(new Date(context)).format(f)}else return context});Handlebars.registerHelper("math",function(lvalue,operator,rvalue,
options){lvalue=parseFloat(lvalue);rvalue=parseFloat(rvalue);return{"+":lvalue+rvalue,"-":lvalue-rvalue,"*":lvalue*rvalue,"/":lvalue/rvalue,"%":lvalue%rvalue}[operator]});Handlebars.registerHelper("formatNumber",function(value){if(null!=value)return value.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,");return value})});